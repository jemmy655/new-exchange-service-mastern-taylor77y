user  www www;
worker_processes auto;
error_log  /www/wwwlogs/nginx_error.log  crit;
pid        /www/server/nginx/logs/nginx.pid;
worker_rlimit_nofile 51200;

events
    {
        use epoll;
        worker_connections 51200;
        multi_accept on;
    }

http
    {
        include       mime.types;
		#include luawaf.conf;

		include proxy.conf;

        default_type  application/octet-stream;

        server_names_hash_bucket_size 512;
        client_header_buffer_size 32k;
        large_client_header_buffers 4 32k;
        client_max_body_size 50m;

        sendfile   on;
        tcp_nopush on;

        keepalive_timeout 60;

        tcp_nodelay on;

        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 64k;
        fastcgi_buffers 4 64k;
        fastcgi_busy_buffers_size 128k;
        fastcgi_temp_file_write_size 256k;
		fastcgi_intercept_errors on;

        gzip on;
        gzip_min_length  1k;
        gzip_buffers     4 16k;
        gzip_http_version 1.1;
        gzip_comp_level 2;
        gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml;
        gzip_vary on;
        gzip_proxied   expired no-cache no-store private auth;
        gzip_disable   "MSIE [1-6]\.";

        limit_conn_zone $binary_remote_addr zone=perip:10m;
		limit_conn_zone $server_name zone=perserver:10m;

        server_tokens off;
        access_log off;


        include /www/server/panel/vhost/nginx/*.conf;
        
        server {   
		server_name i.fvex.global;
		client_max_body_size 5M;
		listen 443 ssl;
		ssl_certificate 3702072_i.fvex.global.pem;
		ssl_certificate_key 3702072_i.fvex.global.key;
		ssl_session_timeout 5m;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
		ssl_prefer_server_ciphers on;
		location / {
			proxy_pass http://127.0.0.1:8760;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;	
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade"; 
			
			#指定允许跨域的方法，*代表所有
			add_header Access-Control-Allow-Methods *;
			# 预检命令的缓存，如果不缓存每次会发送两次请求
			add_header Access-Control-Max-Age 3600;
			# 带cookie请求需要加上这个字段，并设置为true
			add_header Access-Control-Allow-Credentials true;
			# 表示允许这个域跨域调用（客户端发送请求的域名和端口） 
			# $http_origin动态获取请求客户端请求的域 不用*的原因是带cookie的请求不支持*号
			add_header Access-Control-Allow-Origin $http_origin;
			# 表示请求头的字段 动态获取
			add_header Access-Control-Allow-Headers 
			$http_access_control_request_headers;
			# OPTIONS预检命令，预检命令通过时才发送请求
			# 检查请求的类型是不是预检命令
			if ($request_method = OPTIONS){
				return 200;
			}
     		}
		location /wss {
			proxy_pass http://127.0.0.1:8782;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade"; 
		}
		location /reg {
			root   /opt/reg;
			index  reg.html reg.htm;
		}
		location /geetest {
			root   /opt/reg;
			index  geetest.html geetest.htm;
		}

		location ~ ^/(images|img|js|css|gif|jpg|jpeg|png|bmp|swf)/ {
			root   /opt/reg;   #####静态资源的路径（下面有个图说明）
			autoindex on;
			access_log  off;
			expires     30d;           #####设置缓存时间
		}

     }
	server {
		listen       80;
		server_name i.fvex.global;
		rewrite ^/(.*)$ https://i.fvex.global:443/$1 permanent;
	}

    server{
		listen 80;
		server_name fvex.global;
		rewrite ^/(.*)$ https://fvex.global:443/$1 permanent;
    }
	
  

}

